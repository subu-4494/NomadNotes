{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\Projects\\\\NomadNotes\\\\frontend\\\\src\\\\components\\\\auth\\\\createnote.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateNote() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const [images, setImages] = useState([]); // Array for multiple images\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Handle multiple image selection\n  function handleImageChange(e) {\n    setImages(Array.from(e.target.files)); // convert FileList to Array\n  }\n\n  // Handle form submission\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Prepare form data for file upload\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    formData.append(\"topic\", topic);\n\n    // Append multiple images\n    images.forEach(imageFile => {\n      formData.append(\"images\", imageFile);\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:5000/api/notes/create\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}` // send auth token\n        },\n        body: formData // send form data with images\n      });\n      const data = await response.json();\n      setLoading(false);\n      if (response.ok) {\n        alert(\"Note created successfully!\");\n        navigate(\"/dashboard\"); // go back to dashboard after creating note\n      } else {\n        setError(data.message || \"Failed to create note\");\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(\"Error: \" + err.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-note-container\",\n    style: {\n      maxWidth: 600,\n      margin: \"auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          marginBottom: 10,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true,\n        rows: 5,\n        style: {\n          width: \"100%\",\n          marginBottom: 10,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Topic\",\n        value: topic,\n        onChange: e => setTopic(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          marginBottom: 10,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleImageChange,\n        style: {\n          marginBottom: 15\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          padding: \"10px 20px\",\n          backgroundColor: \"#4A90E2\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: loading ? \"not-allowed\" : \"pointer\"\n        },\n        children: loading ? \"Creating...\" : \"Create Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateNote, \"7OZ+L9TGHqHuhzSPVS/wf6hTnpw=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateNote","_s","title","setTitle","content","setContent","topic","setTopic","images","setImages","loading","setLoading","error","setError","navigate","handleImageChange","e","Array","from","target","files","handleSubmit","preventDefault","formData","FormData","append","forEach","imageFile","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","data","json","ok","alert","message","err","className","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","encType","type","placeholder","value","onChange","required","width","marginBottom","rows","accept","multiple","disabled","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["D:/web development/Projects/NomadNotes/frontend/src/components/auth/createnote.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CreateNote() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [images, setImages] = useState([]);  // Array for multiple images\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle multiple image selection\r\n  function handleImageChange(e) {\r\n    setImages(Array.from(e.target.files));  // convert FileList to Array\r\n  }\r\n\r\n  // Handle form submission\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    // Prepare form data for file upload\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"topic\", topic);\r\n\r\n    // Append multiple images\r\n    images.forEach((imageFile) => {\r\n      formData.append(\"images\", imageFile);\r\n    });\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\"http://localhost:5000/api/notes/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // send auth token\r\n        },\r\n        body: formData, // send form data with images\r\n      });\r\n\r\n      const data = await response.json();\r\n      setLoading(false);\r\n\r\n      if (response.ok) {\r\n        alert(\"Note created successfully!\");\r\n        navigate(\"/dashboard\");  // go back to dashboard after creating note\r\n      } else {\r\n        setError(data.message || \"Failed to create note\");\r\n      }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(\"Error: \" + err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"create-note-container\" style={{ maxWidth: 600, margin: \"auto\", padding: 20 }}>\r\n      <h2>Create New Note</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          style={{ width: \"100%\", marginBottom: 10, padding: 8 }}\r\n        />\r\n        <textarea\r\n          placeholder=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n          rows={5}\r\n          style={{ width: \"100%\", marginBottom: 10, padding: 8 }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Topic\"\r\n          value={topic}\r\n          onChange={(e) => setTopic(e.target.value)}\r\n          required\r\n          style={{ width: \"100%\", marginBottom: 10, padding: 8 }}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          multiple\r\n          onChange={handleImageChange}\r\n          style={{ marginBottom: 15 }}\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            backgroundColor: \"#4A90E2\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: 5,\r\n            cursor: loading ? \"not-allowed\" : \"pointer\",\r\n          }}\r\n        >\r\n          {loading ? \"Creating...\" : \"Create Note\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}