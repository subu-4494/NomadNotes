{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\Projects\\\\NomadNotes\\\\frontend\\\\src\\\\components\\\\auth\\\\dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getNotes, deleteNote } from \"../../services/api\"; // You need to implement these API calls\nimport { useNavigate } from \"react-router-dom\";\nimport \"./dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  async function fetchNotes() {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getNotes(); // Your API call to GET /notes\n      setNotes(data);\n    } catch (err) {\n      setError(\"Failed to load notes.\");\n    }\n    setLoading(false);\n  }\n  async function handleDelete(id) {\n    if (window.confirm(\"Are you sure you want to delete this note?\")) {\n      try {\n        await deleteNote(id); // Your API call to DELETE /notes/:id\n        setNotes(prevNotes => prevNotes.filter(note => note._id !== id));\n      } catch {\n        alert(\"Failed to delete note.\");\n      }\n    }\n  }\n  function handleUpdate(id) {\n    navigate(`/notes/edit/${id}`); // Navigate to edit page (you create this route)\n  }\n  function handleCreate() {\n    navigate(\"/notes/create\"); // Navigate to create note page\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", localStorage.getItem(\"username\") || \"User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.clear();\n          navigate(\"/login\");\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading your notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), !loading && !notes.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no notes yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create your first note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        children: [note.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/uploads/${note.image}`,\n          alt: note.title,\n          className: \"note-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Topic:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 16\n          }, this), \" \", note.topic]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(note.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(note._id),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(note._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"22nupKSoBmc/fyLoIjDmERUYMf4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","getNotes","deleteNote","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","notes","setNotes","loading","setLoading","error","setError","navigate","fetchNotes","data","err","handleDelete","id","window","confirm","prevNotes","filter","note","_id","alert","handleUpdate","handleCreate","className","children","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","onClick","clear","length","map","image","src","alt","title","topic","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/web development/Projects/NomadNotes/frontend/src/components/auth/dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getNotes, deleteNote } from \"../../services/api\"; // You need to implement these API calls\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  async function fetchNotes() {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await getNotes(); // Your API call to GET /notes\r\n      setNotes(data);\r\n    } catch (err) {\r\n      setError(\"Failed to load notes.\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n    if (window.confirm(\"Are you sure you want to delete this note?\")) {\r\n      try {\r\n        await deleteNote(id); // Your API call to DELETE /notes/:id\r\n        setNotes((prevNotes) => prevNotes.filter((note) => note._id !== id));\r\n      } catch {\r\n        alert(\"Failed to delete note.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleUpdate(id) {\r\n    navigate(`/notes/edit/${id}`); // Navigate to edit page (you create this route)\r\n  }\r\n\r\n  function handleCreate() {\r\n    navigate(\"/notes/create\"); // Navigate to create note page\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Welcome, {localStorage.getItem(\"username\") || \"User\"}</h1>\r\n        <button onClick={() => {\r\n          localStorage.clear();\r\n          navigate(\"/login\");\r\n        }}>Logout</button>\r\n      </header>\r\n\r\n      {loading && <p>Loading your notes...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {!loading && !notes.length && (\r\n        <div className=\"no-notes\">\r\n          <p>You have no notes yet.</p>\r\n          <button onClick={handleCreate}>Create your first note</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"notes-list\">\r\n        {notes.map((note) => (\r\n          <div key={note._id} className=\"note-card\">\r\n            {note.image && <img src={`/uploads/${note.image}`} alt={note.title} className=\"note-image\" />}\r\n            <h3>{note.title}</h3>\r\n            <p><strong>Topic:</strong> {note.topic}</p>\r\n            <p>{new Date(note.createdAt).toLocaleDateString()}</p>\r\n            <div className=\"note-actions\">\r\n              <button onClick={() => handleUpdate(note._id)}>Update</button>\r\n              <button onClick={() => handleDelete(note._id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}