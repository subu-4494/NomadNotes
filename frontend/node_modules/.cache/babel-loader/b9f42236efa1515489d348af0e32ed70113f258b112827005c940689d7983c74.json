{"ast":null,"code":"// src/services/api.js\n\nconst API_BASE_URL = \"http://localhost:5000/api\";\n\n// LOGIN\nexport async function loginUser(credentials) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    return await response.json();\n  } catch (err) {\n    return {\n      message: \"Network error. Please try again later.\"\n    };\n  }\n}\n\n// REGISTER\nexport async function registerUser(credentials) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || \"Registration failed\");\n    }\n    return data;\n  } catch (err) {\n    return {\n      message: err.message || \"Network error\"\n    };\n  }\n}\n\n// GET NOTES\nexport async function getNotes() {\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(`${API_BASE_URL}/notes`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch notes\");\n  return res.json();\n}\n\n// CREATE NOTE (with image upload)\nexport async function createNote(formData) {\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(`${API_BASE_URL}/notes/create`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    body: formData // must be FormData (not JSON)\n  });\n  if (!res.ok) throw new Error(\"Failed to create note\");\n  return res.json();\n}\n\n// DELETE NOTE\nexport async function deleteNote(id) {\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(`${API_BASE_URL}/notes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete note\");\n  return res.json();\n}","map":{"version":3,"names":["API_BASE_URL","loginUser","credentials","response","fetch","method","headers","body","JSON","stringify","json","err","message","registerUser","data","ok","Error","getNotes","token","localStorage","getItem","res","Authorization","createNote","formData","deleteNote","id"],"sources":["D:/web development/Projects/NomadNotes/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\n// LOGIN\r\nexport async function loginUser(credentials) {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    return { message: \"Network error. Please try again later.\" };\r\n  }\r\n}\r\n\r\n// REGISTER\r\nexport async function registerUser(credentials) {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || \"Registration failed\");\r\n    }\r\n\r\n    return data;\r\n  } catch (err) {\r\n    return { message: err.message || \"Network error\" };\r\n  }\r\n}\r\n\r\n// GET NOTES\r\nexport async function getNotes() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const res = await fetch(`${API_BASE_URL}/notes`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to fetch notes\");\r\n  return res.json();\r\n}\r\n\r\n// CREATE NOTE (with image upload)\r\nexport async function createNote(formData) {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const res = await fetch(`${API_BASE_URL}/notes/create`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: formData, // must be FormData (not JSON)\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Failed to create note\");\r\n  return res.json();\r\n}\r\n\r\n// DELETE NOTE\r\nexport async function deleteNote(id) {\r\n  const token = localStorage.getItem(\"token\");\r\n  const res = await fetch(`${API_BASE_URL}/notes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to delete note\");\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,eAAeC,SAASA,CAACC,WAAW,EAAE;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAa,EAAE;MACzDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;IACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAO;MAAEC,OAAO,EAAE;IAAyC,CAAC;EAC9D;AACF;;AAEA;AACA,OAAO,eAAeC,YAAYA,CAACX,WAAW,EAAE;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,gBAAgB,EAAE;MAC5DK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMY,IAAI,GAAG,MAAMX,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAI,CAACP,QAAQ,CAACY,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACF,OAAO,IAAI,qBAAqB,CAAC;IACxD;IAEA,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZ,OAAO;MAAEC,OAAO,EAAED,GAAG,CAACC,OAAO,IAAI;IAAgB,CAAC;EACpD;AACF;;AAEA;AACA,OAAO,eAAeK,QAAQA,CAAA,EAAG;EAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,GAAGJ,YAAY,QAAQ,EAAE;IAC/CM,OAAO,EAAE;MAAEgB,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,IAAI,CAACG,GAAG,CAACN,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOK,GAAG,CAACX,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAea,UAAUA,CAACC,QAAQ,EAAE;EACzC,MAAMN,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,GAAGJ,YAAY,eAAe,EAAE;IACtDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPgB,aAAa,EAAE,UAAUJ,KAAK;IAChC,CAAC;IACDX,IAAI,EAAEiB,QAAQ,CAAE;EAClB,CAAC,CAAC;EAEF,IAAI,CAACH,GAAG,CAACN,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOK,GAAG,CAACX,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAee,UAAUA,CAACC,EAAE,EAAE;EACnC,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,GAAGJ,YAAY,UAAU0B,EAAE,EAAE,EAAE;IACrDrB,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAEgB,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,IAAI,CAACG,GAAG,CAACN,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOK,GAAG,CAACX,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}