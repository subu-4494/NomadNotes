{"ast":null,"code":"// src/services/api.js\n\nconst API_BASE_URL = \"http://localhost:5000/api\";\nexport async function loginUser(credentials) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    return await response.json();\n  } catch (err) {\n    return {\n      message: \"Network error. Please try again later.\"\n    };\n  }\n}\nexport async function registerUser(credentials) {\n  try {\n    console.log(\"Sending to backend:\", credentials);\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || \"Registration failed\");\n    }\n    return data;\n  } catch (err) {\n    return {\n      message: err.message || \"Network error. Please try again later.\"\n    };\n  }\n}\nexport async function getNotes() {\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(`${baseURL}/notes`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch notes\");\n  return res.json();\n}\nexport async function deleteNote(id) {\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(`${baseURL}/notes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete note\");\n  return res.json();\n}","map":{"version":3,"names":["API_BASE_URL","loginUser","credentials","response","fetch","method","headers","body","JSON","stringify","json","err","message","registerUser","console","log","data","ok","Error","getNotes","token","localStorage","getItem","res","baseURL","Authorization","deleteNote","id"],"sources":["D:/web development/Projects/NomadNotes/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\nexport async function loginUser(credentials) {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    return { message: \"Network error. Please try again later.\" };\r\n  }\r\n}\r\n\r\nexport async function registerUser(credentials) {\r\n  try {\r\n    console.log(\"Sending to backend:\", credentials);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || \"Registration failed\");\r\n    }\r\n\r\n    return data;\r\n  } catch (err) {\r\n    return { message: err.message || \"Network error. Please try again later.\" };\r\n  }\r\n}\r\n\r\n\r\nexport async function getNotes() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const res = await fetch(`${baseURL}/notes`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to fetch notes\");\r\n  return res.json();\r\n}\r\n\r\nexport async function deleteNote(id) {\r\n  const token = localStorage.getItem(\"token\");\r\n  const res = await fetch(`${baseURL}/notes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to delete note\");\r\n  return res.json();\r\n}"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,eAAeC,SAASA,CAACC,WAAW,EAAE;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAa,EAAE;MACzDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;IACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAO;MAAEC,OAAO,EAAE;IAAyC,CAAC;EAC9D;AACF;AAEA,OAAO,eAAeC,YAAYA,CAACX,WAAW,EAAE;EAC9C,IAAI;IACFY,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEb,WAAW,CAAC;IAE/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,gBAAgB,EAAE;MAC5DK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMb,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACc,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACJ,OAAO,IAAI,qBAAqB,CAAC;IACxD;IAEA,OAAOI,IAAI;EACb,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZ,OAAO;MAAEC,OAAO,EAAED,GAAG,CAACC,OAAO,IAAI;IAAyC,CAAC;EAC7E;AACF;AAGA,OAAO,eAAeO,QAAQA,CAAA,EAAG;EAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAC,GAAGoB,OAAO,QAAQ,EAAE;IAC1ClB,OAAO,EAAE;MAAEmB,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,IAAI,CAACG,GAAG,CAACN,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOK,GAAG,CAACb,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAegB,UAAUA,CAACC,EAAE,EAAE;EACnC,MAAMP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAC,GAAGoB,OAAO,UAAUG,EAAE,EAAE,EAAE;IAChDtB,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAEmB,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,IAAI,CAACG,GAAG,CAACN,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOK,GAAG,CAACb,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}